---
import { Code } from "astro:components";
import { When } from "@astropub/flow";

import { decode } from "html-entities";

import type { ComponentProps } from "astro/types";
import type { Except, Merge } from "type-fest";

type Props = Merge<Except<ComponentProps<typeof Code>, "code">, {
  "data-code-type"?: "inline" | "block";
}>;

const { "data-code-type": type, ...props } = Astro.props;

const content = Astro.slots.has("default")
  ? decode(await Astro.slots.render("default"))
  : "";
---
<When test={Astro.props["data-code-type"] === "inline"}>
  <Code code={content} inline wrap themes={{
    light: "catppuccin-latte",
    dark: "catppuccin-mocha",
  }} tabindex="-1" {...props as astroHTML.JSX.IntrinsicAttributes} />

  <Fragment slot="else">
    {content}
  </Fragment>
</When>
