name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get-changed-apps:
    name: Get changed apps
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.changed-apps.outputs.packages }}
      empty: ${{ steps.changed-apps.outputs.empty }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Find changed workspaces
        uses: AlexShukel/get-changed-workspaces-action@v2.0.0
        id: changed-apps
        with:
          workspaces: |
            apps/*
          filter: "@wycey/*"

  get-changed-files:
    name: Get changed files
    runs-on: ubuntu-latest
    outputs:
      only-changed: ${{ steps.changed-files.outputs.only_changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Find changed files
        uses: tj-actions/changed-files@v35
        id: changed-files
        with:
          files: |
            docs/**
            .github/**
            !.github/workflow/ci.yml
            **.md

  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    needs:
      - get-changed-files
    if: needs.get-changed-files.outputs.only-changed != 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Lint
        env:
          TURBO_TOKEN: ${{ secrets.TURBOREPO_TOKEN }}
        # run: bun run lint.ci
        run: bun run lint

      # - name: Merge all SARIF files into results.sarif
      #   run: pnpx @microsoft/sarif-multitool merge *.sarif --recurse --output-directory=. --output-file=results.sarif

      # - name: Upload results.sarif
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #       sarif_file: results.sarif
      #       category: eslint

      - name: Check formatting
        run: bun run fmt.check

  deploy:
    name: Deploy ${{ matrix.package.name }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    needs:
      - get-changed-apps
      - get-changed-files
      - lint
    strategy:
      matrix:
        package: ${{ fromJson(needs.get-changed-apps.outputs.packages) }}
    if: ${{ !fromJson(needs.get-changed-apps.outputs.empty) }} || needs.get-changed-files.outputs.only-changed != 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build ${{ matrix.package.name }}
        env:
          TURBO_TOKEN: ${{ secrets.TURBOREPO_TOKEN }}
        # run: bun run build --filter="${{ matrix.package.name }}" Bun doesn't support filter
        run: bun run build

      - name: Generate project information
        id: project-name
        run: |
          echo "name=$(sed s/\@wycey.// <<<${{ matrix.package.name }})" >> $GITHUB_OUTPUT
          echo "dir=$(realpath --relative-to="$(pwd)" "${{ matrix.package.path }}")" >> $GITHUB_OUTPUT

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@main
        with:
          apiToken: ${{ secrets.CF_PAGES_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: ${{ steps.project-name.outputs.name }}
          directory: dist
          workingDirectory: ${{ steps.project-name.outputs.dir }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
